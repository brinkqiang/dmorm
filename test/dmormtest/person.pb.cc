// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: person.proto
// Protobuf C++ Version: 5.26.1

#include "person.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace db {

inline constexpr tb_Person::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        email_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{::uint64_t{0u}},
        phonetype_{static_cast< ::db::PhoneType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR tb_Person::tb_Person(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct tb_PersonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR tb_PersonDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~tb_PersonDefaultTypeInternal() {}
  union {
    tb_Person _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 tb_PersonDefaultTypeInternal _tb_Person_default_instance_;
}  // namespace db
static ::_pb::Metadata file_level_metadata_person_2eproto[1];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_person_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_person_2eproto = nullptr;
const ::uint32_t
    TableStruct_person_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::db::tb_Person, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::db::tb_Person, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::db::tb_Person, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::db::tb_Person, _impl_.number_),
        PROTOBUF_FIELD_OFFSET(::db::tb_Person, _impl_.email_),
        PROTOBUF_FIELD_OFFSET(::db::tb_Person, _impl_.phonetype_),
        2,
        0,
        1,
        3,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::db::tb_Person)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::db::_tb_Person_default_instance_._instance,
};
const char descriptor_table_protodef_person_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014person.proto\022\002db\"X\n\ttb_Person\022\n\n\002id\030\001 "
    "\001(\004\022\016\n\006number\030\002 \001(\t\022\r\n\005email\030\003 \001(\t\022 \n\tph"
    "onetype\030\004 \001(\0162\r.db.PhoneType*+\n\tPhoneTyp"
    "e\022\n\n\006MOBILE\020\000\022\010\n\004HOME\020\001\022\010\n\004WORK\020\002"
};
static ::absl::once_flag descriptor_table_person_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_person_2eproto = {
    false,
    false,
    153,
    descriptor_table_protodef_person_2eproto,
    "person.proto",
    &descriptor_table_person_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_person_2eproto::offsets,
    file_level_metadata_person_2eproto,
    file_level_enum_descriptors_person_2eproto,
    file_level_service_descriptors_person_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_person_2eproto_getter() {
  return &descriptor_table_person_2eproto;
}
namespace db {
const ::google::protobuf::EnumDescriptor* PhoneType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_person_2eproto);
  return file_level_enum_descriptors_person_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t PhoneType_internal_data_[] = {
    196608u, 0u, };
bool PhoneType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class tb_Person::_Internal {
 public:
  using HasBits = decltype(std::declval<tb_Person>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(tb_Person, _impl_._has_bits_);
};

tb_Person::tb_Person(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.tb_Person)
}
inline PROTOBUF_NDEBUG_INLINE tb_Person::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        number_(arena, from.number_),
        email_(arena, from.email_) {}

tb_Person::tb_Person(
    ::google::protobuf::Arena* arena,
    const tb_Person& from)
    : ::google::protobuf::Message(arena) {
  tb_Person* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, phonetype_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::phonetype_));

  // @@protoc_insertion_point(copy_constructor:db.tb_Person)
}
inline PROTOBUF_NDEBUG_INLINE tb_Person::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        number_(arena),
        email_(arena) {}

inline void tb_Person::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, phonetype_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::phonetype_));
}
tb_Person::~tb_Person() {
  // @@protoc_insertion_point(destructor:db.tb_Person)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void tb_Person::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.number_.Destroy();
  _impl_.email_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
tb_Person::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(tb_Person, _impl_._cached_size_),
              false,
          },
          &tb_Person::MergeImpl,
          &tb_Person::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void tb_Person::Clear() {
// @@protoc_insertion_point(message_clear_start:db.tb_Person)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.number_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.email_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.phonetype_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.phonetype_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* tb_Person::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 32, 2> tb_Person::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(tb_Person, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_tb_Person_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::db::tb_Person>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .db.PhoneType phonetype = 4;
    {::_pbi::TcParser::FastEr0S1,
     {32, 3, 2, PROTOBUF_FIELD_OFFSET(tb_Person, _impl_.phonetype_)}},
    // optional uint64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(tb_Person, _impl_.id_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(tb_Person, _impl_.id_)}},
    // optional string number = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(tb_Person, _impl_.number_)}},
    // optional string email = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(tb_Person, _impl_.email_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 id = 1;
    {PROTOBUF_FIELD_OFFSET(tb_Person, _impl_.id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional string number = 2;
    {PROTOBUF_FIELD_OFFSET(tb_Person, _impl_.number_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string email = 3;
    {PROTOBUF_FIELD_OFFSET(tb_Person, _impl_.email_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .db.PhoneType phonetype = 4;
    {PROTOBUF_FIELD_OFFSET(tb_Person, _impl_.phonetype_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {0, 3},
  }}, {{
    "\14\0\6\5\0\0\0\0"
    "db.tb_Person"
    "number"
    "email"
  }},
};

::uint8_t* tb_Person::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:db.tb_Person)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_id(), target);
  }

  // optional string number = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_number();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "db.tb_Person.number");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string email = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_email();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "db.tb_Person.email");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional .db.PhoneType phonetype = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_phonetype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.tb_Person)
  return target;
}

::size_t tb_Person::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.tb_Person)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string number = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_number());
    }

    // optional string email = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_email());
    }

    // optional uint64 id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_id());
    }

    // optional .db.PhoneType phonetype = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_phonetype());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void tb_Person::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<tb_Person*>(&to_msg);
  auto& from = static_cast<const tb_Person&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:db.tb_Person)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_number(from._internal_number());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_email(from._internal_email());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.phonetype_ = from._impl_.phonetype_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void tb_Person::CopyFrom(const tb_Person& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.tb_Person)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool tb_Person::IsInitialized() const {
  return true;
}

void tb_Person::InternalSwap(tb_Person* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.number_, &other->_impl_.number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, &other->_impl_.email_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(tb_Person, _impl_.phonetype_)
      + sizeof(tb_Person::_impl_.phonetype_)
      - PROTOBUF_FIELD_OFFSET(tb_Person, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata tb_Person::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_person_2eproto_getter,
                                   &descriptor_table_person_2eproto_once,
                                   file_level_metadata_person_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace db
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_person_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
